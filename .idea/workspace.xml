<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d3ee1ae8-466f-46ef-bedf-c5c57a7291e8" name="Changes" comment="git commit &quot;Rename and implement entities; add ProjectEnum with implementation&#10;            &#10;            - Renamed entities to follow naming conventions&#10;            - Implemented entity classes with initial fields and methods&#10;            - Added ProjectEnum to represent project statuses&#10;            - Implemented ProjectEnum with necessary methods&#10;            &#10;            This commit refactors the entity names, completes the implementation of the entity classes, and introduces the ProjectEnum to handle project statuses. The implementation of ProjectEnum includes methods to manage and utilize the enum values effectively&quot;">
      <change afterPath="$PROJECT_DIR$/src/com/BatiCouisine/controller/MainDOeuvreController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/com/BatiCouisine/controller/MateriauController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/Main.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/controller/ClientController.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/controller/ClientController.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/controller/ProjectController.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/controller/ProjectController.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/MainDoeuvreRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/MainDoeuvreRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/MateriauRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/MateriauRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/ProjectRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/ProjectRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/DevisRepositoryImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/DevisRepositoryImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/MainDoeuvreRepositoryImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/MainDoeuvreRepositoryImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/MateriauRepositoryImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/MateriauRepositoryImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/ProjectRepositoryImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/repository/implementation/ProjectRepositoryImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/Implementation/MainDoeuvreServiceImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/Implementation/MainDoeuvreServiceImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/Implementation/MateriauServiceImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/Implementation/MateriauServiceImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/Implementation/ProjectServiceImp.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/Implementation/ProjectServiceImp.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/MainDoeuvreService.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/MainDoeuvreService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/ProjectService.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/service/ProjectService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/util/DBUtils.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BatiCuisine/com/BatiCouisine/util/DBUtils.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/controller/ClientController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/controller/ClientController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/controller/ProjectController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/controller/ProjectController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/repository/MainDoeuvreRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/repository/MainDoeuvreRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/repository/MateriauRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/repository/MateriauRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/repository/ProjectRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/repository/ProjectRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/DevisRepositoryImp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/DevisRepositoryImp.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/MainDoeuvreRepositoryImp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/MainDoeuvreRepositoryImp.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/MateriauRepositoryImp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/MateriauRepositoryImp.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/ProjectRepositoryImp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/repository/implementation/ProjectRepositoryImp.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/service/Implementation/MainDoeuvreServiceImp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/service/Implementation/MainDoeuvreServiceImp.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/service/Implementation/ProjectServiceImp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/service/Implementation/ProjectServiceImp.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/service/MainDoeuvreService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/service/MainDoeuvreService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/service/ProjectService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/service/ProjectService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/com/BatiCouisine/util/DBUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/BatiCouisine/util/DBUtils.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;IBNESSAYEH&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/IBNESSAYEH/BatiCouisine.git&quot;,
    &quot;accountId&quot;: &quot;814d314b-91cc-44c3-bfa9-af6cf6cc5a52&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2mRbbq2Pyao3TUygAZhJBib9OmD" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main-menu&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.20224.419" />
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-IU-242.20224.419" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d3ee1ae8-466f-46ef-bedf-c5c57a7291e8" name="Changes" comment="git commit &quot;Rename and implement entities; add ProjectEnum with implementation&#10;            &#10;            - Renamed entities to follow naming conventions&#10;            - Implemented entity classes with initial fields and methods&#10;            - Added ProjectEnum to represent project statuses&#10;            - Implemented ProjectEnum with necessary methods&#10;            &#10;            This commit refactors the entity names, completes the implementation of the entity classes, and introduces the ProjectEnum to handle project statuses. The implementation of ProjectEnum includes methods to manage and utilize the enum values effectively&quot;" />
      <created>1727042412880</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1727042412880</updated>
      <workItem from="1727042414101" duration="1097000" />
      <workItem from="1727043524096" duration="11840000" />
      <workItem from="1727086061564" duration="1659000" />
      <workItem from="1727087733129" duration="14605000" />
      <workItem from="1727107951639" duration="1143000" />
      <workItem from="1727127692155" duration="620000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="git commit &quot;Rename and implement entities; add ProjectEnum with implementation&#10;            &#10;            - Renamed entities to follow naming conventions&#10;            - Implemented entity classes with initial fields and methods&#10;            - Added ProjectEnum to represent project statuses&#10;            - Implemented ProjectEnum with necessary methods&#10;            &#10;            This commit refactors the entity names, completes the implementation of the entity classes, and introduces the ProjectEnum to handle project statuses. The implementation of ProjectEnum includes methods to manage and utilize the enum values effectively&quot;" />
    <option name="LAST_COMMIT_MESSAGE" value="git commit &quot;Rename and implement entities; add ProjectEnum with implementation&#10;            &#10;            - Renamed entities to follow naming conventions&#10;            - Implemented entity classes with initial fields and methods&#10;            - Added ProjectEnum to represent project statuses&#10;            - Implemented ProjectEnum with necessary methods&#10;            &#10;            This commit refactors the entity names, completes the implementation of the entity classes, and introduces the ProjectEnum to handle project statuses. The implementation of ProjectEnum includes methods to manage and utilize the enum values effectively&quot;" />
  </component>
</project>